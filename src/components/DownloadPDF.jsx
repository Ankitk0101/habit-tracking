import React from "react";
import { jsPDF } from "jspdf";

const DownloadPDF = ({ habits, currentUser }) => {
    const UserName = localStorage.getItem('username') || "Guest";
    console.log(UserName)
  const handleDownload = async () => {
    try {
      const doc = new jsPDF({
        orientation: "portrait",
        unit: "mm",
        format: "a4"
      });

     
      doc.setFontSize(22);
      doc.setTextColor(40, 53, 147);
      doc.text("Habit Tracker Report", 105, 20, { align: "center" });

 
      doc.setFontSize(12);
      doc.setTextColor(128, 128, 128);
      doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 105, 30, { align: "center" });

       
      doc.setFontSize(14);
      doc.setTextColor(0, 0, 0);
      doc.text("User Information", 14, 45);
      doc.setFontSize(12);
      
      
      const userName = UserName || "Not provided";
      const userEmail = currentUser?.email || "Not provided";
      
      doc.text(`Name: ${userName}`, 14, 55);
      doc.text(`Email: ${userEmail}`, 14, 65);

      
      doc.setDrawColor(200, 200, 200);
      doc.line(14, 75, 196, 75);

      
      doc.setFontSize(14);
      doc.text("Summary Statistics", 14, 85);
      doc.setFontSize(12);
      
       
      const totalHabits = habits?.length || 0;
      const completedToday = habits?.filter(h => h.completedToday)?.length || 0;
      const bestStreak = Math.max(...(habits?.map(h => h.longestStreak) || [0]), 0);
      
      doc.text(`Total Habits: ${totalHabits}`, 14, 95);
      doc.text(`Completed Today: ${completedToday}`, 14, 105);
      doc.text(`Best Streak: ${bestStreak} days`, 14, 115);

      
      doc.line(14, 125, 196, 125);

     
      doc.setFontSize(14);
      doc.text("Your Habits", 14, 140);
      
      
      doc.setFillColor(232, 234, 246);
      doc.rect(14, 145, 182, 10, 'F');
      doc.setTextColor(0, 0, 0);
      doc.setFontSize(12);
      doc.setFont("helvetica", "bold");
      doc.text("Habit Name", 16, 152);
    
      doc.text("Current Streak", 120, 152);
      doc.text("Longest Streak", 160, 152);
      doc.setFont("helvetica", "normal");

     
      let yPosition = 160;
      habits?.forEach((habit, index) => {
        
        if (yPosition > 270) {
          doc.addPage();
          yPosition = 20;
        }
        
        // Alternate row colors
        if (index % 2 === 0) {
          doc.setFillColor(245, 245, 245);
          doc.rect(14, yPosition - 5, 182, 10, 'F');
        }
        
        // Safely handle habit data
        const name = habit?.name || "Unnamed";
        // const frequency = habit?.frequency || "N/A";
        const currentStreak = habit?.currentStreak?.toString() || "0";
        const longestStreak = habit?.longestStreak?.toString() || "0";
        
        doc.text(name, 16, yPosition);
      
        doc.text(currentStreak, 120, yPosition);
        doc.text(longestStreak, 160, yPosition);
        
        yPosition += 10;
      });

       
      doc.setFontSize(10);
      doc.setTextColor(150, 150, 150);
      doc.text("Generated by Habit Tracker App", 105, 285, { align: "center" });

       
      doc.save(`habit-report-${new Date().toISOString().slice(0, 10)}.pdf`);

    } catch (error) {
      console.error("Error generating PDF:", error);
      alert("Failed to generate PDF. Please try again.");
    }
  };

  return (
    <button
      onClick={handleDownload}
      className="w-full py-2 px-4 bg-red-600 text-white rounded hover:bg-red-700 transition-colors cursor-pointer"
    >
      Download PDF Report
    </button>
  );
};

export default DownloadPDF;